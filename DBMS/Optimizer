Optimizer
가장 효율적인 방법으로 SQL을 수행할 최적의 처리 경로를 생성해주는 DBMS이다. 

[옵티마이저의 특징]
RBO(규칙기반 옵티마이저) :
1. 실행 우선 순위에 기준을 둔다
2. 인덱스 존재시 가장 우선시 사용
3. 사용자 SQL 작성 숙련도에 따른 성능
4. 판단이 매우 규칙적 실행 예상 가능하다는 점이 장점이다
5. 예측 통계정보 요소를 무시할수 있는 경우가 있다.

CBO(비용기반 옵티마이저) :
1. 최소비용기반 계산 실행 계획 수립
2. Cost 비용을 기준으로 실행된다.
3. index 또한 Cost에 의해 결정된다.
4. 옵티마이저 예측에 따른 성능이 결정된다.
5. 통계정보를 통한 현실 요소가 적용된다. 

RBO 규칙 순서 : 
1. ROWID를 사용한 단일 행일 경우
2. 클러스터 조인에 의한 단일 행일 경우
3. 유일하거나 기본키를 가진 해시 클러스터 키에 의한 단일 행일 경우
4. 유일하거나 기본키에 의한 단일 행일 경우
5. 클러스터 조인인 경우
6. 해시 클러스터 조인인 경우
7. 인덱스 클러스터 키인 경우
8. 복합 컬럼 인덱스인 경우
9. 단일 컬럼 인덱스인 경우
10. 인덱스가 구성된 컬럼에서 제한된 범위를 검색하는 경우
11. 인덱스가 구성된 컬럼에서 무제한 범위를 검색하는 경우
12. 정렬-병합(Sort - Merge) 조인인 경우
13. 인덱스가 구성된 컬럼에서 MAX, MIN을 구하는 경우
14. 인덱스가 구성된 컬럼에서 ORDER BY 를 실행하는 경우
15. 전체 테이블을 FULL TABLE SCAN 하는 경우


CBO 모드 :

CHOOSE : 현재는 잘 사용하지 않지만 SQL이 실행되는 환경에서 통계 정보를 가져올 수 있으면, 비용기반 옵티마이저로 그렇지 않다면 규칙기반 옵티마이저로 작동시키는 모드
FIRST_ROWS : 옵티마이저가 처리 결과 중 첫 건을 출력하는데 걸리는 시간을 최소화 할 수 있는 실행계획을 세우는 모드
FIRST_ROWS_n : SQL 실행 결과를 출력하는데까지 걸리는 응답속도를 최적화 하는 모드
ALL_ROWS: SQL 실행 결과 전체를 빠르게 처리하는데 최적화된 실행계획을 세우는 모드.
          마지막으로 출력될 행 까지 최소한의 자원을 사용하여 최대한 빨리 가져오게 한다.


[옵티마이저 동작방식]

Parser : SQL 문장을 분석하여 문법 검사와 구성요소를 파악.
         이를 파싱해서 파싱 트리를 만든다.

Query Transformer : 파싱된 SQL을 보고 같은 결과를 도출하되. 좀 더 나은 실행 계획을 갖는 SQL로 변환이 가능한지 판단하여 변환 작업 수행 
Estimator : 시스템 통계정보를 딕셔너리로부터 수집하여 SQL을 실행할 때 소요되는 총 비용을 계산한다.
Plan Generator : Estimator를 통해 계산된 값들을 토대로 후보군이 되는 실행계획을 도출한다
Row-Source Generator : 옵티마이저가 실행한 실행계획을 SQL 엔진이 실제 실행할 수 있는 코드나 프로시저 형태로 포맷팅한다.
SQL Engine : SQL을 실행한다.
